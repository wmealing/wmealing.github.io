#+TITLE: For when I'm gone.
#+OPTIONS: ^:nil num:nil toc:nil 

#+HTML_HEAD: <link rel="preconnect" href="https://fonts.googleapis.com">
#+HTML_HEAD: <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
#+HTML_HEAD: <link href="https://fonts.googleapis.com/css2?family=B612&display=swap" rel="stylesheet">
#+HTML_HEAD: <link rel="stylesheet" href="tufte.css" type="text/css" />
#+HTML_HEAD: <style> * { font-family: 'B612', sans-serif; } </style>
#+HTML_HEAD_EXTRA: <meta http-equiv="Content-Security-Policy"  content="default-src 'self'; img-src https://*; child-src 'none';">

* [[https://wmealing.github.io/htmx-common-lisp.html][Common Lisp and HTMX]]

Common lisp and HTMX provide a sane platform to develop basic applications.  I [[https://wmealing.github.io/htmx-common-lisp.html][outline the reasons]] that I have chosen them.
This post also marks the new voice I plan to use while blogging. I no longer care to engage in debate with people without being paid.

* [[./emacs-org-babel-analysis.html ][Supercharge your workflow with emacs and org-babel]].

I do kernel flaw analysis for a living, someone asked me to do a short write up on how I use org-babel to
do my work. I've documented it [[./emacs-org-babel-analysis.html][here]].

* Lisp flavored erlang (gen_server)

I decided to collapse two of my interests, lisp and erlang.  Lisp flavored erlang isnt going to win
any popularity contests, but it is something that I dont entirely hate  working on.  Ive written
a quick tutorial describing one of the [[https://wmealing.github.io/lfe-gen-server.html][core features of erlang]].

* Choosing the wrong roads.

I've spent the last week reflecting on some poor programming life choices that I've made.
disagree with the majority, perhaps you are wrong.  I'm not stupid enough to think that i'm smarter
than most people.  To be honest its probably not worth reading because you already think just like
this.  If I [[https://wmealing.github.io/less-than-optimistic.html][write about it]], perhaps it will clear my mind.

* COBOL - Simple "Curses" like screen to get keyboard input.

On of the simple but effectively powerful things that gnuCOBOL can do is a TUI.  Its not
fancy (when it implements UTF8 correctly, it will be fancy-af) but it gets the job
done much quicker than most webapps do.

Check out my [[./simple-cobol-query.html][Simple example]] which I've got working on Linux and MacOS X.

* Python Range function in lisp [Aug 2022]

I have wanted a quick way to something similar to the python range function (range n y) in common lisp.
Sometimes I just want to have some kind of immediate list creation.  [[http://wmealing.github.io/lisp-range][See my drivel on this topic.]]

* Simple WX example in erlang [July 2022]

I don't always write a gui for my apps, but when I do, I use wx because I'm not one for complaining about pixel perfect pedantry.

The one that works for me at the moment is [[http://wmealing.github.io/wx-erlang-example][WX Erlang]]

* MIRAI analysis - evasion - deleting the executing code [Nov 2020]

The MIRAI malware deletes itself from disk in an attempt to make it
harder to analyse. [[https://wmealing.github.io/mirai-delete-yourself][This post]] goes into detail on how it works, a rust
implementation and a few improvements that could have been done.

* MIRAI analysis - watchdog access in rust [Nov 2020]

The MIRAI malware uses an technique intended to prevent the systems
watchdog from rebooting the machine when its too busy.  [[https://wmealing.github.io/watchdog-in-rust][I share what I learned about this and ported it to rust.]]

* Userspace eBPF [Sep 2 2020]

A few distros have users allowed to insert eBPF programs.  This is disabled in
some distributions.  [[./ebpf-disabled-for-users.html][I've documented my findings]] after talking to different
decision holders who made some of these choices.

* Anatomy of kernel module signing  [Aug 20 2020]

I decided to take a look at the Linux kernel modules signing process.  It seems
that the recent drovorub malware has some interesting misinformation regarding 
module signing, so I had decided to take a look at the [[./signed-kernel-modules.html][regarding its implementations on Red hat Enterprise Linux]].

* Encrypting a disk to only boot in a specific system. [Aug 9 2020]

Recent research papers related to flaws in thunderbolt and secureboot have
piqued my interest in learning more about what can be done to prevent a system
comprimised in such a way from being abused.  I've written about
[[./tpm-pcr07.html][it here]]

* Toshiba Toughpad FZ-G1-3 [Jul 25 2020]

I have recently purchased one of these machines in an auction, and I am -very-
impressed with its build quality.   While this one is not its current purchase
release, I've got a page talking about the customizations and things I have
learned about it [[./toshiba-toughpad-fz-g1-3][While making it work for me]]



* Kernel SecuriTea

I work on a small youtube channel where I talk about kernel security issues
that interest me.  I work on quite a lot of these in my work so i'm limited to
what I can cover.





